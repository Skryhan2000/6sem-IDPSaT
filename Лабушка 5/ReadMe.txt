1. Что такое векторизация?

Векторизация - ключевая концепция языка. Процесс трансформации 
исходного вектора путем применения некой функции к каждому его
элементу (f(x)- векторизация в R).
Векторо- индексированый набор данных одного типа. Порядок 
индексации с 1.

2. Какой тип данных у цифры в R?

R не делает различия между скалярными и векторными величинами,
т. е. скаляр (в нашем случае цифра) - это вектор длины 1.

3. Какую задачу выполняют перечисленные операторы/функции? 
(<-,:,с,seq, by, length, rep, times, each, $) 

"с": Создание вектора из перечисленных элементов с разделителем ",".
Синтаксис: с(3,4,6) - [1] 3 4 6
"<-": Операция присвоения
Синтаксис: bubba <- c(3,5,7,9) - bubba=[1] 3 5 7 9
":": Создание вектора числовой последовательности от:до
Синтаксис: 3:6 [1] 3 4 5 6
"seq(_,_,by=_)": Создание числовой последовательности (ариф. прогрессии) 
от,до, c шагом
Синтаксис: seq(1,1.5,by=0,25) [1] 1.00 1.25 1.50
"seq(_,_,length=_)": Создание числовой последовательности (ариф. прогрессии) 
от,до, c длиной. Т. е. автоматическое определение шага из длинны и границ.
Синтаксис: seq(1,1.5,length=3) [1] 1.00 1.25 1.50
"rep(1:3,length=_ илил each=_)": Создание числовой последовательности 
основаной на повторении залоченой через операнд : последовательности
до определенной длины или на повторении каждого элеменда этой последовательности
заданное количество раз.
Синтаксис:rep(1:2,length=4) [1] 1 2 1 2 или rep(1:2,each=2) [1] 1 1 2 2
"$": Доступ к элементу по индексу

4. Какие причины потребности создания языка R?

R - язык программирования для статистической обработки данных и работы с 
графикой, а также свободная программная среда вычислений с открытым исходным 
кодом в рамках проекта GNU. Язык создавался как аналогичный языку S, 
разработанному в Bell Labs, и является его альтернативной реализацией, 
хотя между языками есть существенные отличия, но в большинстве своём код на 
языке S работает в среде R. 

R - это очень общий пакет статистического анализа, широко используется в 
социальных науках, статистике, экономике, страховом деле, социологии, финансах, 
физике высоких энергий и так далее. Обладает свойствами кроссплатформенности,
объектно-ориентированаости, матричности, системного синтекса, работы на USB.
R может работать с бд как SQL типа, так и NoSQL

5. Принцип генерации случайных чисел в языке R?

Действительные числа генерируются функцией runif(n,min, max), n- количество 
значений. Целые числа sample(x, size, replace=false, prod=NULL), 
x — целое число (эквивалентно 1:x) или вектор ограничивающий диапазон 
(например: 5:15); size — количество генерируемых значений; 
replace — разрешаются ли повторения; prob — вектор весов распределения, 
по умолчанию отсутствует (равномерное распределение.)

Принцип: равномерное распределение. Каждое случайное значение реализуется 
с одинаковой вероятностью. Т. е. есть пространство с мерой(неотрицательная
величина, интуитивно размер множества) состоящее из меры -u-, множества -Q-, 
сигма-алгебра(непустая система подмножества, замкнутая отностительно операций
разности и суммы, счетного объеденения) подмножества -F-. 
Тогда равномерным распределением на множестве A относительно меры u
называется вероятностная мера P, удовлетворяющая равенству: 
P(A)=u(A)/u(Q), A<-F

6. Что такое factor в языке R?

"factor"- это спецефический тип объекта, предназначенный для категориальных 
данных, может состоять из нескольких уровней - levels. Подмножество факторов-
это фактор с тем же количеством уровней, даже если их в подмножестве не 
осталось. «Избавиться» от лишнего уровня можно, только применив специальный 
аргумент или выполнив преобразование данных «туда и обратно», факторы в 
отличие от текстовых векторов можно легко преобразовать в числовые значения.
Факторы можно упорядочивать, превращая их некое подобие числовых данных.

7. Приведите пример логического вектора.

Прежде всего это пропущенные или отсутствующие данные, которые обозначаются 
как NA. Такие данные очень часто возникают в реальных полевых и лабораторных 
исследованиях, опросах, тестированиях и т. д. При этом следует осознавать, 
что наличие пропущенных данных вовсе не означает, что данные в целом 
некачественны.

Пример: 
> h <- c(8, 10, NA, NA, 8, NA, 8)
> h
[1] 8 10 NA NA 8 NA 8
